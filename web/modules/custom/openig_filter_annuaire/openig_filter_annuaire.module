<?php

use \Drupal\Core\Form\FormStateInterface;
use Drupal\views\ViewExecutable;
use Drupal\views\Plugin\views\query\QueryPluginBase;


function openig_filter_annuaire_form_views_exposed_form_alter(&$form, $form_state, $form_id) {
	$view_ids = ['annuaire'];
	if ($form_id == 'views_exposed_form' && in_array($form_state->get('view')->id(), $view_ids)) {

		// Ajout du filtre Outils / Compétences

		// Ajout du collapse
		$form['field_outils_competences_target_id_collapsible'] = array(
			'#type' => 'details',
			'#title' => 'Outils / Compétences',
			'#attributes' => array(
				'class' => array( 
					'form-item',
				),
			),
			'#access' => true,
			'#process' => array(
				array(
					'Drupal\Core\Render\Element\Details',
					'processGroup',
				),
				array(
					'Drupal\Core\Render\Element\Details',
					'processAjaxForm',
				),
			),
			'#pre_render' => array(
				array(
					'Drupal\Core\Render\Element\Details',
					'preRenderDetails',
				),
				array(
					'Drupal\Core\Render\Element\Details',
					'preRenderGroup',
				),
			),
		);	

		// Ajout liste case à cocher
		$form['field_outils_competences_target_id'] = array(
			'#type' => 'checkboxes',
			'#multiple' => true,
			'#options' => array(),
			'#size' => 0,
			'#group' => 'field_outils_competences_target_id_collapsible',
			'#context' => array(),
			'#bef_display_inline' => false,
			'#theme' => 'bef_checkboxes',
			'#bef_select_all_none' => false,
			'#bef_select_all_none_nested' => false,
			'#process' => array(
				array(
					'Drupal\Core\Render\Element\Checkboxes',
					'processCheckboxes',
				),
				'webform_process_options',
				array(
					'\Drupal\Core\Render\Element\RenderElement',
					'processGroup',
				),
			),
			'#pre_render' => array(
				array(
					'Drupal\Core\Render\Element\Checkboxes',
					'preRenderCompositeFormElement',
				),
				array(
					'\Drupal\Core\Render\Element\RenderElement',
					'preRenderGroup',
				),
			),
		);	


		
		// Ajout du filtre Groupes de travail

		// Ajout du collapse
		$form['field_groupes_de_travail_target_id_collapsible'] = array(
			'#type' => 'details',
			'#title' => 'Groupes de travail',
			'#attributes' => array(
				'class' => array( 
					'form-item',
				),
			),
			'#access' => true,
			'#process' => array(
				array(
					'Drupal\Core\Render\Element\Details',
					'processGroup',
				),
				array(
					'Drupal\Core\Render\Element\Details',
					'processAjaxForm',
				),
			),
			'#pre_render' => array(
				array(
					'Drupal\Core\Render\Element\Details',
					'preRenderDetails',
				),
				array(
					'Drupal\Core\Render\Element\Details',
					'preRenderGroup',
				),
			),
		);	

		// Ajout liste case à cocher
		$form['field_groupes_de_travail_target_id'] = array(
			'#type' => 'checkboxes',
			'#multiple' => true,
			'#options' => array(),
			'#size' => 0,
			'#group' => 'field_groupes_de_travail_target_id_collapsible',
			'#context' => array(),
			'#bef_display_inline' => false,
			'#theme' => 'bef_checkboxes',
			'#bef_select_all_none' => false,
			'#bef_select_all_none_nested' => false,
			'#process' => array(
				array(
					'Drupal\Core\Render\Element\Checkboxes',
					'processCheckboxes',
				),
				'webform_process_options',
				array(
					'\Drupal\Core\Render\Element\RenderElement',
					'processGroup',
				),
			),
			'#pre_render' => array(
				array(
					'Drupal\Core\Render\Element\Checkboxes',
					'preRenderCompositeFormElement',
				),
				array(
					'\Drupal\Core\Render\Element\RenderElement',
					'preRenderGroup',
				),
			),
		);	



		// Connexion BDD
		$database = \Drupal::database();
		// Récupération des outils et compétences
		$query_outils = $database->query("SELECT DISTINCT t.tid, t.name FROM {user__field_structure} s LEFT JOIN {user__field_outils_competences} c ON c.entity_id = s.entity_id LEFT JOIN {taxonomy_term_field_data} t ON t.tid = c.field_outils_competences_target_id");
		$results_outils = $query_outils->fetchAll();
		foreach ($results_outils as $result_outil) {
			if ($result_outil->tid != null) {
				$form['field_outils_competences_target_id']['#options'][$result_outil->tid] = $result_outil->name;
			}
		}

		// Récupération des groupes de travail
		$query_groupes = $database->query("SELECT DISTINCT n.nid, n.title FROM {user__field_structure} s LEFT JOIN {node__field_members} m ON m.field_members_target_id = s.entity_id LEFT JOIN {node_field_data} n ON n.nid = m.entity_id");
		$results_groupes = $query_groupes->fetchAll();
		foreach ($results_groupes as $result_groupe) {
			if ($result_groupe->nid != null) {
				$form['field_groupes_de_travail_target_id']['#options'][$result_groupe->nid] = $result_groupe->title;
			}
		}
	}
}

function openig_filter_annuaire_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
	if (($view->id() == 'annuaire') && $view->current_display == 'annuaire') {

		// Ajout du filtre Outils / Compétences


		// Récupération des valeurs du filtre
		$filtre_outils_competences = \Drupal::request()->get('field_outils_competences_target_id');
	
		if ($filtre_outils_competences) {
			// Ajout des jointures
			$configuration_user = [
				'type'       => 'LEFT',
				'table'      => 'user__field_structure',
				'field'      => 'field_structure_target_id',
				'left_table' => 'node_field_data',
				'left_field' => 'nid',
				'operator'   => '=',
			];
			$join_user = \Drupal\views\Views::pluginManager('join')->createInstance('standard', $configuration_user);
			$rel_user = $query->addRelationship('user__field_structure', $join_user, 'user__field_structure');

			$configuration_outils_competences = [
			'type'       => 'LEFT',
			'table'      => 'user__field_outils_competences',
			'field'      => 'entity_id',
			'left_table' => 'user__field_structure',
			'left_field' => 'entity_id',
			'operator'   => '=',
			];
			$join_outils_competences = \Drupal\views\Views::pluginManager('join')->createInstance('standard', $configuration_outils_competences);
			$rel_outils_competences = $query->addRelationship('user__field_outils_competences', $join_outils_competences, 'user__field_outils_competences');

			// Ajout de la table user__field_outils_competences
			$query->addTable('user__field_outils_competences', $rel_outils_competences, $join_outils_competences, 'user__field_outils_competences');
		
			// Ajout d'une condition
			$query->setGroupOperator('OR');
			$query->setWhereGroup('AND', 1);
			$query->addWhere(1, "user__field_outils_competences.field_outils_competences_target_id", $filtre_outils_competences, "in");
	
		}

	
		
		// Ajout du filtre Groupes de travail

		// Récupération des valeurs du filtre
		$filtre_groupes = \Drupal::request()->get('field_groupes_de_travail_target_id');

		if($filtre_groupes){

			// Ajout des jointures
			$configuration_structure = [
				'type'       => 'LEFT',
				'table'      => 'user__field_structure',
				'field'      => 'field_structure_target_id',
				'left_table' => 'node_field_data',
				'left_field' => 'nid',
				'operator'   => '=',
			];
			$join_structure = \Drupal\views\Views::pluginManager('join')->createInstance('standard', $configuration_structure);
			$rel_structure = $query->addRelationship('user__field_structure', $join_structure, 'user__field_structure');

			$configuration_groupe = [
				'type'       => 'LEFT',
				'table'      => 'node__field_members',
				'field'      => 'field_members_target_id',
				'left_table' => 'user__field_structure',
				'left_field' => 'entity_id',
				'operator'   => '=',
			];
			$join_groupe = \Drupal\views\Views::pluginManager('join')->createInstance('standard', $configuration_groupe);
			$rel_groupe = $query->addRelationship('node__field_members', $join_groupe, 'node__field_members');


			// Ajout de la table node__field_members
			$query->addTable('node__field_members', $rel_groupe, $join_groupe, 'node__field_members');				
			
			// Ajout d'une condition
			$query->setGroupOperator('OR');
			$query->setWhereGroup('AND', 1);
			$query->addWhere(1, "node__field_members.entity_id", $filtre_groupes, "in");

		}
	}
}