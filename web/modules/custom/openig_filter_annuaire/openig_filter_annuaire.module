<?php

use \Drupal\Core\Form\FormStateInterface;
use Drupal\views\ViewExecutable;
use Drupal\views\Plugin\views\query\QueryPluginBase;


function openig_filter_annuaire_form_views_exposed_form_alter(&$form, $form_state, $form_id) {
	$view_ids = ['annuaire'];
	if ($form_id == 'views_exposed_form' && in_array($form_state->get('view')->id(), $view_ids)) {

		// Ajout du filtre Outils / Compétences

		// Ajout du collapse
		$form['field_outils_competences_target_id_collapsible'] = array(
			'#type' => 'details',
			'#title' => 'Outils / Compétences',
			'#attributes' => array(
				'class' => array( 
					'form-item',
				),
			),
			'#access' => true,
			'#process' => array(
				array(
					'Drupal\Core\Render\Element\Details',
					'processGroup',
				),
				array(
					'Drupal\Core\Render\Element\Details',
					'processAjaxForm',
				),
			),
			'#pre_render' => array(
				array(
					'Drupal\Core\Render\Element\Details',
					'preRenderDetails',
				),
				array(
					'Drupal\Core\Render\Element\Details',
					'preRenderGroup',
				),
			),
		);	

		// Ajout liste case à cocher
		$form['field_outils_competences_target_id'] = array(
			'#type' => 'checkboxes',
			'#multiple' => true,
			'#options' => array(),
			'#size' => 0,
			'#group' => 'field_outils_competences_target_id_collapsible',
			'#context' => array(),
			'#bef_display_inline' => false,
			'#theme' => 'bef_checkboxes',
			'#bef_select_all_none' => false,
			'#bef_select_all_none_nested' => false,
			'#process' => array(
				array(
					'Drupal\Core\Render\Element\Checkboxes',
					'processCheckboxes',
				),
				'webform_process_options',
				array(
					'\Drupal\Core\Render\Element\RenderElement',
					'processGroup',
				),
			),
			'#pre_render' => array(
				array(
					'Drupal\Core\Render\Element\Checkboxes',
					'preRenderCompositeFormElement',
				),
				array(
					'\Drupal\Core\Render\Element\RenderElement',
					'preRenderGroup',
				),
			),
		);	


		// Connexion BDD
		$database = \Drupal::database();
		// Récupération des outils et compétences
		$query = $database->query("SELECT DISTINCT t.tid, t.name FROM {user__field_structure} s LEFT JOIN {user__field_outils_competences} c ON c.entity_id = s.entity_id LEFT JOIN {taxonomy_term_field_data} t ON t.tid = c.field_outils_competences_target_id");
		$results = $query->fetchAll();
		foreach ($results as $result) {
			if ($result->tid != null) {
				$form['field_outils_competences_target_id']['#options'][$result->tid] = $result->name;
			}
		}
	}
}

function openig_filter_annuaire_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
	if (($view->id() == 'annuaire') && $view->current_display == 'annuaire') {
		// Ajout des jointures
		$configuration_user = [
			'type'       => 'LEFT',
			'table'      => 'user__field_structure',
			'field'      => 'field_structure_target_id',
			'left_table' => 'node_field_data',
			'left_field' => 'nid',
			'operator'   => '=',
		  ];
		  $join_user = \Drupal\views\Views::pluginManager('join')->createInstance('standard', $configuration_user);
		  $rel_user = $query->addRelationship('user__field_structure', $join_user, 'user__field_structure');

		  $configuration_outils_competences = [
			'type'       => 'LEFT',
			'table'      => 'user__field_outils_competences',
			'field'      => 'entity_id',
			'left_table' => 'user__field_structure',
			'left_field' => 'entity_id',
			'operator'   => '=',
		  ];
		  $join_outils_competences = \Drupal\views\Views::pluginManager('join')->createInstance('standard', $configuration_outils_competences);
		  $rel_outils_competences = $query->addRelationship('user__field_outils_competences', $join_outils_competences, 'user__field_outils_competences');

		  // Ajout de la table user__field_outils_competences
		  $query->addTable('user__field_outils_competences', $rel_outils_competences, $join_outils_competences, 'user__field_outils_competences');

		  // Récupération des valeurs du filtre
		  $filtre_outils_competences = \Drupal::request()->get('field_outils_competences_target_id');
		 
		  // Ajout d'une condition
		  $query->setGroupOperator('OR');
		  $query->setWhereGroup('AND', 1);
		  $query->addWhere(1, "user__field_outils_competences.field_outils_competences_target_id", $filtre_outils_competences, "in");
	}
}